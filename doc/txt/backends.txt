.. -*- mode: rst -*-

==================
 Storage Backends
==================

S3QL can use different protocols to store the file system data.
Independent of the backend that you use, the place where your file
system data is being stored is called a *bucket*. (This is mostly for
historical reasons, since initially S3QL supported only the Amazon S3
backend).

Most backends first try to read the file `~/.s3ql/authinfo` to determine
the username and password for connecting to the remote host. If this
fails, both username and password are read from the terminal.

The `authinfo` file has to contain entries of the form ::

  backend <backend> machine <host> login <user> password <password>

So to use the login `joe` with password `jibbadup` when using the FTP
backend to connect to the host `backups.joesdomain.com`, you would
specify ::

  backend ftp machine backups.joesdomain.com login joe password jibbadup


Currently, S3QL supports the following backends:

Local
=====

The local backend stores file system data in a directory on your local
computer. This is mostly used for testing. The storage URL for the
local backend has the form `local://<path>`. Note that you have to
write three consecutive slashes to specify an absolute path, e.g.
`local:///var/archive`.

SFTP / SSH
==========

The SFTP backend uses the SFTP protocol, which is a file transfer
protocol similar to ftp, but uses an encrypted SSH connection.
The storage URL for SFTP connections has the form ::

  sftp://<host>[:port]/<path>


FTP
====

This backend provides support for the standard FTP and FTP over TLS
protocols. The store url has the form ::

  ftp://<host>[:port]/<path>

for unencrypted FTP or ::

  ftps://<host>[:port]/<path>

for FTP over TLS.


Amazon S3
=========

To store your file system in an Amazon S3 bucket, use a storage URL of
the form `s3://<bucketname>`.

When reading the authentication information for the S3 backend from
the `authinfo` file, the `host` field is ignored, i.e. the first entry
with `s3` as a backend will be used.

Note that the bucket names come from a global pool, so chances are
that your favorite name has already been taken by another S3 user.
Usually a longer bucket name containing some random numbers, like
`19283712_yourname_s3ql`, will work better.

If you do not already have one, you need to obtain an Amazon S3
account from `Amazon AWS <http://aws.amazon.com/>`_. The account is
free, you will pay only for the amount of storage that you actually
use.

Note that the login and password for accessing S3 are not the user id
and password that you use to log into the Amazon Webpage, but the "AWS
access key id" and "AWS secret access key" shown under `My
Account/Access Identifiers
<https://aws-portal.amazon.com/gp/aws/developer/account/index.html?ie=UTF8&action=access-key>`_.
