# Code autogenerated by ctypeslib. Any changes will be lost!

#pylint: disable-all
#@PydevCodeAnalysisIgnore

from ctypes import *

STRING = POINTER(c_char)
_libraries = {}
_libraries['/lib/libfuse.so.2'] = CDLL('/lib/libfuse.so.2')


FUSE_SET_ATTR_MODE = 1 # Variable c_int '1'
XATTR_REPLACE = 2 # Variable c_int '2'
FUSE_SET_ATTR_GID = 4 # Variable c_int '4'
FUSE_SET_ATTR_ATIME = 16 # Variable c_int '16'
FUSE_SET_ATTR_MTIME = 32 # Variable c_int '32'
XATTR_CREATE = 1 # Variable c_int '1'
FUSE_SET_ATTR_UID = 2 # Variable c_int '2'
FUSE_SET_ATTR_SIZE = 8 # Variable c_int '8'
class fuse_chan(Structure):
    pass
class fuse_args(Structure):
    pass
fuse_mount = _libraries['/lib/libfuse.so.2'].fuse_mount
fuse_mount.restype = POINTER(fuse_chan)
fuse_mount.argtypes = [STRING, POINTER(fuse_args)]
fuse_unmount = _libraries['/lib/libfuse.so.2'].fuse_unmount
fuse_unmount.restype = None
fuse_unmount.argtypes = [STRING, POINTER(fuse_chan)]
class fuse_session(Structure):
    pass
fuse_set_signal_handlers = _libraries['/lib/libfuse.so.2'].fuse_set_signal_handlers
fuse_set_signal_handlers.restype = c_int
fuse_set_signal_handlers.argtypes = [POINTER(fuse_session)]
fuse_remove_signal_handlers = _libraries['/lib/libfuse.so.2'].fuse_remove_signal_handlers
fuse_remove_signal_handlers.restype = None
fuse_remove_signal_handlers.argtypes = [POINTER(fuse_session)]
class fuse_lowlevel_ops(Structure):
    pass
class fuse_conn_info(Structure):
    pass
class fuse_req(Structure):
    pass
fuse_req_t = POINTER(fuse_req)
fuse_ino_t = c_ulong
class fuse_file_info(Structure):
    pass
class stat(Structure):
    pass
__mode_t = c_uint
mode_t = __mode_t
__u_quad_t = c_ulonglong
__dev_t = __u_quad_t
dev_t = __dev_t
size_t = c_uint
__quad_t = c_longlong
__off64_t = __quad_t
off_t = __off64_t
class flock(Structure):
    pass
uint64_t = c_uint64
fuse_lowlevel_ops._fields_ = [
    ('init', CFUNCTYPE(None, c_void_p, POINTER(fuse_conn_info))),
    ('destroy', CFUNCTYPE(None, c_void_p)),
    ('lookup', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, STRING)),
    ('forget', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, c_ulong)),
    ('getattr', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, POINTER(fuse_file_info))),
    ('setattr', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, POINTER(stat), c_int, POINTER(fuse_file_info))),
    ('readlink', CFUNCTYPE(None, fuse_req_t, fuse_ino_t)),
    ('mknod', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, STRING, mode_t, dev_t)),
    ('mkdir', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, STRING, mode_t)),
    ('unlink', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, STRING)),
    ('rmdir', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, STRING)),
    ('symlink', CFUNCTYPE(None, fuse_req_t, STRING, fuse_ino_t, STRING)),
    ('rename', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, STRING, fuse_ino_t, STRING)),
    ('link', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, fuse_ino_t, STRING)),
    ('open', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, POINTER(fuse_file_info))),
    ('read', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, size_t, off_t, POINTER(fuse_file_info))),
    ('write', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, STRING, size_t, off_t, POINTER(fuse_file_info))),
    ('flush', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, POINTER(fuse_file_info))),
    ('release', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, POINTER(fuse_file_info))),
    ('fsync', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, c_int, POINTER(fuse_file_info))),
    ('opendir', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, POINTER(fuse_file_info))),
    ('readdir', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, size_t, off_t, POINTER(fuse_file_info))),
    ('releasedir', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, POINTER(fuse_file_info))),
    ('fsyncdir', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, c_int, POINTER(fuse_file_info))),
    ('statfs', CFUNCTYPE(None, fuse_req_t, fuse_ino_t)),
    ('setxattr', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, STRING, STRING, size_t, c_int)),
    ('getxattr', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, STRING, size_t)),
    ('listxattr', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, size_t)),
    ('removexattr', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, STRING)),
    ('access', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, c_int)),
    ('create', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, STRING, mode_t, POINTER(fuse_file_info))),
    ('getlk', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, POINTER(fuse_file_info), POINTER(flock))),
    ('setlk', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, POINTER(fuse_file_info), POINTER(flock), c_int)),
    ('bmap', CFUNCTYPE(None, fuse_req_t, fuse_ino_t, size_t, uint64_t)),
]
fuse_reply_err = _libraries['/lib/libfuse.so.2'].fuse_reply_err
fuse_reply_err.restype = c_int
fuse_reply_err.argtypes = [fuse_req_t, c_int]
fuse_reply_none = _libraries['/lib/libfuse.so.2'].fuse_reply_none
fuse_reply_none.restype = None
fuse_reply_none.argtypes = [fuse_req_t]
class fuse_entry_param(Structure):
    pass
__ino_t = c_ulong
__nlink_t = c_uint
__uid_t = c_uint
__gid_t = c_uint
__blksize_t = c_long
__blkcnt64_t = __quad_t
class timespec(Structure):
    pass
__time_t = c_long
timespec._fields_ = [
    ('tv_sec', __time_t),
    ('tv_nsec', c_long),
]
__ino64_t = __u_quad_t
stat._pack_ = 4
stat._fields_ = [
    ('st_dev', __dev_t),
    ('__pad1', c_ushort),
    ('__st_ino', __ino_t),
    ('st_mode', __mode_t),
    ('st_nlink', __nlink_t),
    ('st_uid', __uid_t),
    ('st_gid', __gid_t),
    ('st_rdev', __dev_t),
    ('__pad2', c_ushort),
    ('st_size', __off64_t),
    ('st_blksize', __blksize_t),
    ('st_blocks', __blkcnt64_t),
    ('st_atim', timespec),
    ('st_mtim', timespec),
    ('st_ctim', timespec),
    ('st_ino', __ino64_t),
]
fuse_entry_param._pack_ = 4
fuse_entry_param._fields_ = [
    ('ino', fuse_ino_t),
    ('generation', c_ulong),
    ('attr', stat),
    ('attr_timeout', c_double),
    ('entry_timeout', c_double),
]
fuse_reply_entry = _libraries['/lib/libfuse.so.2'].fuse_reply_entry
fuse_reply_entry.restype = c_int
fuse_reply_entry.argtypes = [fuse_req_t, POINTER(fuse_entry_param)]
fuse_file_info._fields_ = [
    ('flags', c_int),
    ('fh_old', c_ulong),
    ('writepage', c_int),
    ('direct_io', c_uint, 1),
    ('keep_cache', c_uint, 1),
    ('flush', c_uint, 1),
    ('padding', c_uint, 29),
    ('fh', uint64_t),
    ('lock_owner', uint64_t),
]
fuse_reply_create = _libraries['/lib/libfuse.so.2'].fuse_reply_create
fuse_reply_create.restype = c_int
fuse_reply_create.argtypes = [fuse_req_t, POINTER(fuse_entry_param), POINTER(fuse_file_info)]
fuse_reply_attr = _libraries['/lib/libfuse.so.2'].fuse_reply_attr
fuse_reply_attr.restype = c_int
fuse_reply_attr.argtypes = [fuse_req_t, POINTER(stat), c_double]
fuse_reply_readlink = _libraries['/lib/libfuse.so.2'].fuse_reply_readlink
fuse_reply_readlink.restype = c_int
fuse_reply_readlink.argtypes = [fuse_req_t, STRING]
fuse_reply_open = _libraries['/lib/libfuse.so.2'].fuse_reply_open
fuse_reply_open.restype = c_int
fuse_reply_open.argtypes = [fuse_req_t, POINTER(fuse_file_info)]
fuse_reply_write = _libraries['/lib/libfuse.so.2'].fuse_reply_write
fuse_reply_write.restype = c_int
fuse_reply_write.argtypes = [fuse_req_t, size_t]
fuse_reply_buf = _libraries['/lib/libfuse.so.2'].fuse_reply_buf
fuse_reply_buf.restype = c_int
fuse_reply_buf.argtypes = [fuse_req_t, STRING, size_t]
class iovec(Structure):
    pass
iovec._fields_ = [
    ('iov_base', c_void_p),
    ('iov_len', size_t),
]
fuse_reply_iov = _libraries['/lib/libfuse.so.2'].fuse_reply_iov
fuse_reply_iov.restype = c_int
fuse_reply_iov.argtypes = [fuse_req_t, POINTER(iovec), c_int]
class statvfs(Structure):
    pass
__fsblkcnt64_t = __u_quad_t
__fsfilcnt64_t = __u_quad_t
statvfs._pack_ = 4
statvfs._fields_ = [
    ('f_bsize', c_ulong),
    ('f_frsize', c_ulong),
    ('f_blocks', __fsblkcnt64_t),
    ('f_bfree', __fsblkcnt64_t),
    ('f_bavail', __fsblkcnt64_t),
    ('f_files', __fsfilcnt64_t),
    ('f_ffree', __fsfilcnt64_t),
    ('f_favail', __fsfilcnt64_t),
    ('f_fsid', c_ulong),
    ('__f_unused', c_int),
    ('f_flag', c_ulong),
    ('f_namemax', c_ulong),
    ('__f_spare', c_int * 6),
]
fuse_reply_statfs = _libraries['/lib/libfuse.so.2'].fuse_reply_statfs
fuse_reply_statfs.restype = c_int
fuse_reply_statfs.argtypes = [fuse_req_t, POINTER(statvfs)]
fuse_reply_xattr = _libraries['/lib/libfuse.so.2'].fuse_reply_xattr
fuse_reply_xattr.restype = c_int
fuse_reply_xattr.argtypes = [fuse_req_t, size_t]
fuse_reply_lock = _libraries['/lib/libfuse.so.2'].fuse_reply_lock
fuse_reply_lock.restype = c_int
fuse_reply_lock.argtypes = [fuse_req_t, POINTER(flock)]
fuse_add_direntry = _libraries['/lib/libfuse.so.2'].fuse_add_direntry
fuse_add_direntry.restype = size_t
fuse_add_direntry.argtypes = [fuse_req_t, STRING, size_t, STRING, POINTER(stat), off_t]
class fuse_ctx(Structure):
    pass
uid_t = __uid_t
gid_t = __gid_t
__pid_t = c_int
pid_t = __pid_t
fuse_ctx._fields_ = [
    ('uid', uid_t),
    ('gid', gid_t),
    ('pid', pid_t),
]
fuse_req_ctx = _libraries['/lib/libfuse.so.2'].fuse_req_ctx
fuse_req_ctx.restype = POINTER(fuse_ctx)
fuse_req_ctx.argtypes = [fuse_req_t]
fuse_lowlevel_new = _libraries['/lib/libfuse.so.2'].fuse_lowlevel_new
fuse_lowlevel_new.restype = POINTER(fuse_session)
fuse_lowlevel_new.argtypes = [POINTER(fuse_args), POINTER(fuse_lowlevel_ops), size_t, c_void_p]
fuse_session_add_chan = _libraries['/lib/libfuse.so.2'].fuse_session_add_chan
fuse_session_add_chan.restype = None
fuse_session_add_chan.argtypes = [POINTER(fuse_session), POINTER(fuse_chan)]
fuse_session_remove_chan = _libraries['/lib/libfuse.so.2'].fuse_session_remove_chan
fuse_session_remove_chan.restype = None
fuse_session_remove_chan.argtypes = [POINTER(fuse_chan)]
fuse_session_destroy = _libraries['/lib/libfuse.so.2'].fuse_session_destroy
fuse_session_destroy.restype = None
fuse_session_destroy.argtypes = [POINTER(fuse_session)]
fuse_session_loop = _libraries['/lib/libfuse.so.2'].fuse_session_loop
fuse_session_loop.restype = c_int
fuse_session_loop.argtypes = [POINTER(fuse_session)]
fuse_session_loop_mt = _libraries['/lib/libfuse.so.2'].fuse_session_loop_mt
fuse_session_loop_mt.restype = c_int
fuse_session_loop_mt.argtypes = [POINTER(fuse_session)]
flock._pack_ = 4
flock._fields_ = [
    ('l_type', c_short),
    ('l_whence', c_short),
    ('l_start', __off64_t),
    ('l_len', __off64_t),
    ('l_pid', __pid_t),
]
fuse_conn_info._fields_ = [
    ('proto_major', c_uint),
    ('proto_minor', c_uint),
    ('async_read', c_uint),
    ('max_write', c_uint),
    ('max_readahead', c_uint),
    ('reserved', c_uint * 27),
]
fuse_session._fields_ = [
]
fuse_chan._fields_ = [
]
fuse_req._fields_ = [
]
fuse_args._fields_ = [
    ('argc', c_int),
    ('argv', POINTER(STRING)),
    ('allocated', c_int),
]
__all__ = ['fuse_session_loop_mt', 'fuse_reply_statfs',
           'fuse_reply_readlink', 'timespec', 'fuse_reply_iov',
           'gid_t', 'fuse_session', 'iovec', 'fuse_reply_none',
           'fuse_reply_write', 'off_t', 'fuse_reply_err',
           'fuse_ino_t', '__blksize_t', 'fuse_lowlevel_new', 'mode_t',
           '__off64_t', 'size_t', 'fuse_unmount', 'pid_t',
           'fuse_session_add_chan', 'flock', '__gid_t',
           'fuse_reply_entry', 'fuse_reply_open', 'fuse_ctx', 'uid_t',
           '__quad_t', 'fuse_session_loop', 'fuse_mount',
           'FUSE_SET_ATTR_ATIME', 'fuse_lowlevel_ops', 'fuse_args',
           'fuse_entry_param', 'FUSE_SET_ATTR_GID',
           'fuse_remove_signal_handlers', '__mode_t', 'stat',
           '__pid_t', 'fuse_reply_lock', 'fuse_file_info', 'fuse_req',
           '__ino_t', 'fuse_reply_xattr', '__fsblkcnt64_t',
           '__ino64_t', '__blkcnt64_t', 'FUSE_SET_ATTR_MTIME',
           '__dev_t', 'fuse_reply_buf', 'FUSE_SET_ATTR_UID',
           '__u_quad_t', '__time_t', 'fuse_reply_attr',
           'fuse_req_ctx', 'fuse_chan', 'fuse_reply_create',
           'XATTR_REPLACE', 'FUSE_SET_ATTR_MODE',
           'fuse_session_destroy', 'statvfs',
           'fuse_set_signal_handlers', 'fuse_session_remove_chan',
           '__fsfilcnt64_t', 'fuse_add_direntry',
           'FUSE_SET_ATTR_SIZE', 'XATTR_CREATE', 'fuse_req_t',
           '__nlink_t', 'dev_t', '__uid_t', 'uint64_t',
           'fuse_conn_info']
